##########################################################################################
#                                                                                        #
#                       Pre-commit configuration file                                    #
#                                                                                        #
##########################################################################################

# See https://pre-commit.com for more information
default_stages: [ commit ]

default_language_version:
  # default language version for each language used in the repository
  python: python3


repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      # See https://pre-commit.com/hooks.html for more hooks
      - id: check-merge-conflict # checks for files that contain merge conflict strings.
        stages: [ push ]
      - id: check-executables-have-shebangs # ensures that (non-binary) executables have a shebang.
        stages: [ push ]
      - id: check-shebang-scripts-are-executable # ensures that (non-binary) files with a shebang are executable.
        stages: [ push ]
      - id: check-added-large-files # prevents giant files from being committed.
        args: [ '--maxkb=1000' ]
        stages: [ push ]
      - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.
        stages: [ push ]
      - id: detect-private-key # Detects the presence of private keys.
        stages: [ push ]
      - id: end-of-file-fixer # Makes sure files end in a newline and only a newline.
        stages: [ push ]
      - id: check-ast  # Simply checks whether the files parse as valid python.
        stages: [ push ]
      - id: check-json # Checks json files and verifies them
        stages: [ push ]
      - id: check-yaml # Checks yaml files for parseable syntax.
        stages: [ push ]
      - id: check-toml # Attempts to load all TOML files to verify syntax.
        stages: [ push ]


  - repo: https://github.com/asottile/setup-cfg-fmt
    rev: "v2.2.0"
    hooks:
      - id: setup-cfg-fmt
        args: [ --include-version-classifiers, --max-py-version=3.8 ]


  - repo: https://github.com/psf/black
    rev: 23.1.0
    hooks:
      - id: black
        args: [ "--config","pyproject.toml" ]


  - repo: local
    hooks:

      - id: python-test
        name: python-test
        description: Check test project for potential problems
        entry: sh -c 'python -u unittest'
        types:
          - python
        pass_filenames: false
        language: system
        stages: [ push ]


